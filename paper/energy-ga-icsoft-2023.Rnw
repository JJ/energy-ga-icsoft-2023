\documentclass[a4paper,twoside]{article}

\usepackage{epsfig}
\usepackage{subcaption}
\usepackage{calc}
\usepackage{amssymb}
\usepackage{amstext}
\usepackage{amsmath}
\usepackage{amsthm}
\usepackage{multicol}
\usepackage{pslatex}
\usepackage{apalike}
\usepackage[bottom]{footmisc}
\usepackage{SCITEPRESS}     % Please add other packages that you may need BEFORE the SCITEPRESS.sty package.
\usepackage{hyperref}

\begin{document}

\title{An analysis of energy consumption of JavaScript interpreters/compilers in evolutionary algorithm workloads}

\author{\authorname{Juan J. Merelo-Guervós\sup{1}\orcidAuthor{0000-0002-1385-9741} and Mario García-Valdez\sup{2}\orcidAuthor{0000-0002-2593-1114}}
\affiliation{\sup{1}Department of Computer Engineering, Automatics and Robotics, University of Granada, Granada, Spain}
\affiliation{\sup{2}Department of Graduate Studies, National Technological Institute of Mexico, Tijuana, Mexico}
\email{jmerelo@ugr.es, mario@tectijuana.edu.mx}
}

\keywords{Green computing, metaheuristics, JavaScript}

\abstract{
% The abstract should summarize the contents of the paper and should contain at least 70 and at most 200 words. The text must be set to 9-point font size.
}

\onecolumn \maketitle \normalsize \setcounter{footnote}{0} \vfill

\section{\uppercase{Introduction}}
\label{sec:introduction}

From a language designed for simple browser widgets in the nineties \cite{goodman2007javascript,flanagan1998javascript}, JavaScript is nowadays the most popular language among developers \cite{ogrady22:ranking}, since it occupied that position in 2014 \cite{ogrady14:ranking}, mainly due to the fact that it is almost exclusively the language needed for front-end programming (competing only with languages used for apps, such as Swift or Kotlin, or languages transpiled to JavaScript, such as Dart), while at the same time being very strong in the server component of applications, as well as middleware or other applications. Due to its popularity and the fact that it is based in a standard \cite{ecma1999262} that evolves continuously, it has traditionally had different virtual machines (or interpreters) that are able to run their programs. During the first years, the only running platform available were the browsers; however, the introduction of Node.js \cite{5617064} gave it the popularity it has got today; this popularity, in turn, has made it spawn new interpreters like {\sf deno} \cite{runtimeintroducing} (which is written in Rust) and {\sf bun} \cite{bun} which is written in the relatively unknown language Zig.

No wonder, then, than JavaScript is also popular as a language for implementing metaheuristics, especially evolutionary algorithms, since early implementations in the browser \cite{smith1996ga,jesusIWANN99,langdon2004global}, whole libraries \cite{EvoStar2014:jsEO}, through complete implementations geared towards volunteer computing \cite{2016arXiv160101607M}. But one of the criticisms leveraged towards these implementations of evolutionary algorithms is the (possible) lack of speed of the language compared to other compiled languages (mainly Java, very popular with metaheuristics implementations, or C++).

This is why, since implementation matters \cite{DBLP:conf/iwann/MereloRACML11}, choosing the right interpreter is going to have a big impact on the performance of any workload; if you decide to choose JavaScript for any reason (such as seamless client/server integration, or be able to run your algorithm either on the browser or from the command line if desired) knowing which VM delivers the best performance is essencial, either from the scientific point of view, or for the software engineering point of view.

The rest of the paper follows this plan: next we will present the state of the art; then we will describe the experimental setup in Section \ref{sec:setup}; results will be presented next in Section \ref{sec:res}, and we will end with a discussion of results, conclusions and future lines of work.

\section{State of the art}

Since metaheuristics are so extensively used in machine learning environments,
its interest in research has grown in parallel to its number of applications.
Many papers focus on measuring different aspects of the algorithm and how it
impacts energy consumption \cite{diaz2022population}.

\section*{\uppercase{Acknowledgements}}

This work is supported by the Ministerio espa\~{n}ol de Econom\'{\i}a y Competitividad (Spanish Ministry of Competitivity and Economy) under project PID2020-115570GB-C22 (DemocratAI::UGR).


\bibliographystyle{apalike}
{\small
\bibliography{energy,javascript,geneura}}


\end{document}

